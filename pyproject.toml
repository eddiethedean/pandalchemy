[build-system]
requires = [
    "setuptools>=65.0.0",
    "wheel",
    "setuptools_scm>=7.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "pandalchemy"
version = "0.2.0"
description = "A package that integrates pandas and sqlalchemy with change tracking and optimized SQL operations."
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Odos Matthews", email = "odosmatthews@gmail.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pandas>=1.5.0",
    "sqlalchemy>=2.0.0",
    "fullmetalalchemy>=0.1.0",
    "transmutation>=0.1.0",
    "numpy>=1.20.0",
    "tabulate>=0.8.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0"
]

[project.scripts]
pandalchemy = "pandalchemy.cli:main"

[project.urls]
Homepage = "https://github.com/eddiethedean/pandalchemy"
Documentation = "https://github.com/eddiethedean/pandalchemy#readme"
Repository = "https://github.com/eddiethedean/pandalchemy"
Issues = "https://github.com/eddiethedean/pandalchemy/issues"
Changelog = "https://github.com/eddiethedean/pandalchemy/blob/main/CHANGELOG.rst"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/pandalchemy"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
]
ignore = [
    "E501",   # Line too long
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
